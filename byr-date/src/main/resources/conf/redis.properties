#IP地址
redis.pool.host=182.254.130.93
#端口号
redis.pool.port=6379
#密码
redis.pool.password=13581584138
#reids编码格式
redis.encode=utf-8
#缓存过期时间秒1000*60*60*24*7七天
redis.expire=604800000
#最小空闲连接数, 默认0
redis.pool.minIdle=0
#最大活跃数(2.5没有)
redis.pool.maxActive=400
#最大空闲连接数, 默认8个
redis.pool.maxIdle=300
#最大连接数, 默认8个
redis.pool.maxTotal=600
#获取连接时的最大等待毫秒数=如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1
redis.maxWaitMillis=-1
#逐出连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.pool.minEvictableIdleTimeMillis=30000
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.pool.timeBetweenEvictionRunsMillis=30000
#//对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)
redis.pool.softMinEvictableIdleTimeMillis=30000
#设置的逐出策略类名, 默认DefaultEvictionPolicy=当连接超过最大空闲时间,或连接数超过最大空闲连接数)
redis.evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy
#当调用连接的(borrowObject方法)时，检查有效性, 默认false
redis.pool.testOnBorrow=true
####是否开启Redis服务应用
redis.unlock=false
#是否启用后进先出, 默认true
redis.pool.lifo=true
#连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true
redis.blockWhenExhausted=true
#每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs=n), 默认3
redis.numTestsPerEvictionRun=3
#是否启用pool的jmx管理功能, 默认true
redis.pool.jmxEnabled=true
#MBean ObjectName = new ObjectName("org.apache.commons.pool2:type=GenericObjectPool,name=" + "pool" + i); 默认为"pool", JMX不熟,具体不知道是干啥的...默认就好.
redis.pool.jmxNamePrefix=pool
#在空闲时检查有效性, 默认false
redis.testWhileIdle=false